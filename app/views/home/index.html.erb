<meta charset="utf-8">
<style>
.draggable { z-index: 1; float: left; background: transparent; border: none; position: relative; cursor: progress; }
  #sideBar { vertical-align:top;}
  #contentArea { vertical-align:top;}
  #rightSideBar { vertical-align:top;}
</style>
<script type="text/javascript">
  var testbed_neighborhoods = {};
  var testbed_ips = {};
<% for list in @neighs %>
  testbed_neighborhoods[<%= list.node_id.to_json %>] = "";
<% end %>
<% for list in @neighs %>
  testbed_neighborhoods[<%= list.node_id.to_json %>] += <%= list.neighborhoods.to_json %> + " ";
<% end %>
<% for list in @nodes %>
  testbed_ips[<%= list.id.to_json %>] = <%= list.control_ip.to_json %>;
<% end %>
alert(testbed_neighborhoods);
</script>

<div><b> Menu de movimentacao das testbeds!</b><br />LabWiki v1.0</div>
<table>
 <tr>
  <td id="sideBar">
    <% for list in @nodes %>
    <ul>
      <div align="left" id=<%= list.id %> class="draggable ui-widget-content arrastavel">
      <a href="#"><img src="/testbed.png" ></a></div>
    </ul>
    <% end %>
  </td>

  <td id="contentArea">
    <div align="center" id="containment-wrapper" class="index">
      <div id="container"><canvas id="imageView" height="500" width="500"></canvas>
      <canvas id="imageTemp" width="500" height="250"></canvas></div>
    </div>
  </td>

  <td id="rightSideBar">
    <div id="example_index">Clique em uma das testbeds!</div>
    <div id="testbed_pos">Posição real das testbeds!(em relação ao canvas)</div>
    <div id="testbed_con">Testbed conectada com...</div>
    <input type="button" value="Congelar" id="freeze">
    <input type="button" value="Resetar" id="reset">
    <input type="button" value="Gerar Script" id="script"> 
  </td>
  <span id="texto" hidden>
  # Definição do grupo server
  defGroup('server', "<div id="nodename1">omf.ufg.node1</div>") do |node|
      node.net.e1.ip = "<div id="ip1">192.168.10.1</div>"

      # Adiciona uma aplicação pré-definida
      node.addApplication("oml:app:iperf") do |app|
          # Configura propriedades pré-definidas na aplicação
          app.setProperty('server', true)
          app.setProperty('port', 5000)
      end
  end

  # Definição do grupo client
  defGroup('client', "<div id="nodename2">omf.ufg.node2</div>") do |node|
      node.net.e1.ip = "<div id="ip2">192.168.10.2</div>"
      # Adiciona uma aplicação pré-definida
      node.addApplication("oml:app:iperf") do |app|
          # Configura propriedades pré-definidas na aplicação
          app.setProperty('client', '<div id="ip3">192.168.10.1</div>')
          app.setProperty('port', 5000)
          app.setProperty('time', 30)
          app.setProperty('interval', '1')
          
          # Define qual ponto de medida será coletado e como será feito a coleta
          app.measure('transfer', :samples => 1)
      end
  end

  #A execução do experimento é condicionada ao evento ALL_UP_AND_INSTALLED, isto é, o experimento só terá inicio quando todos os nós tiverem ligados e com as aplicações definidas acima devidamente instaladas. 
  onEvent(:ALL_UP_AND_INSTALLED) do |event|
      wait 5
    #Inicia a aplicação definida no grupo server
      group("server").startApplications
      wait 5
    #Inicia a aplicação definida no grupo client
      group("client").startApplications
      wait 40
      #Pausa execução das aplicações em todos os grupos
      allGroups.stopApplications
      #Faz a chamada para finalizar o experimento
      Experiment.done
  end
  </span>
</tr>
</table>